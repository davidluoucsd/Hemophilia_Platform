血友病问卷系统改造需求 - 6阶段开发计划
==================================================

项目概述：
将现有的单一患者问卷系统改造为支持医生端和患者端的完整医疗管理平台。
医生可以管理患者、分配问卷、查看结果；患者可以接收任务、填写问卷、查看历史。

==================================================
第一阶段：基础架构重构与双端入口 ✅ 已完成
==================================================

目标：重新设计系统架构，创建医生端和患者端的分离入口

Step 1.1: 重构主页为双端选择界面 ✅
- 修改 app/page.tsx，移除现有的患者信息表单
- 创建简洁的选择界面，包含两个大按钮："医生端登录" 和 "患者端登录"
- 添加系统标题、简介说明和版权信息
- 使用现有的 Tailwind CSS 样式，保持界面美观

Step 1.2: 创建路由目录结构 ✅
- 在 app/ 下创建以下目录：
  - app/doctor/ (医生端所有页面)
  - app/patient/ (患者端所有页面)
  - app/shared/ (共享组件和工具)

Step 1.3: 迁移现有患者功能 ✅
- 将现有的患者信息表单页面移动到 app/patient/info/page.tsx
- 将 haemqol 目录移动到 app/patient/haemqol/
- 将 questionnaire、confirm、result 目录移动到 app/patient/ 下
- 更新所有路由引用和导入路径

Step 1.4: 扩展状态管理 ✅
- 修改 app/shared/store/index.ts，添加以下状态：
  - userRole: 'doctor' | 'patient' | null
  - currentUser: { id: string, name: string, role: string } | null
  - isAuthenticated: boolean
- 添加登录、注销相关的 actions

==================================================
第二阶段：身份验证与基础页面框架 ✅ 已完成
==================================================

目标：实现基础的身份验证系统和页面框架

Step 2.1: 医生端登录页面 ✅
- 创建 app/doctor/login/page.tsx
- 实现简单密码验证（初始密码："hemophilia2024"）
- 验证成功后设置登录状态，跳转到 dashboard
- 添加错误提示和加载状态

Step 2.2: 患者端登录页面 ✅
- 创建 app/patient/login/page.tsx
- 实现患者ID/姓名验证（暂时使用简单匹配）
- 成功后跳转到患者任务中心
- 预留后续密码验证的接口

Step 2.3: 医生端Dashboard布局 ✅
- 创建 app/doctor/dashboard/page.tsx
- 设计功能卡片布局，包含：患者管理、问卷管理、数据分析、系统设置、报告生成、帮助支持
- 顶部导航栏显示当前登录医生信息和注销按钮
- 响应式设计，支持移动端适配

==================================================
第三阶段：数据层重构与权限分离 🔄 当前阶段
==================================================

目标：重新设计数据模型，明确医生端和患者端的数据权限分离

Step 3.1: 数据模型重构
- 创建 app/shared/types/database.ts，重新定义：
  - Doctor（医生表）：id, name, password_hash, department, created_at
  - Patient（患者表）：id, name, age, weight, height, doctor_id, created_at, updated_at
  - MedicalInfo（医疗信息表）：patient_id, treatment_frequency, treatment_dose, evaluation_date, next_follow_up, doctor_id
  - Questionnaire（问卷表）：id, name, type, questions_schema, target_audience
  - Task（任务表）：id, patient_id, questionnaire_id, assigned_by_doctor_id, due_date, status, progress
  - Response（回答表）：id, task_id, answers, scores, completed_at, is_visible_to_patient

Step 3.2: 患者信息权限分离
- 患者端可填写/修改：姓名、年龄、体重、身高
- 医生端专属填写：治疗频率、治疗剂量、评估日期、下次随访日期
- 医生端可查看/修改患者的所有信息
- 患者端只能查看自己的基础信息，不能查看医疗治疗信息

Step 3.3: 问卷结果权限控制
- 患者端：只能查看问卷完成状态和基础反馈，不显示具体分数
- 医生端：可以查看完整的评分结果、分析报告和趋势图
- 新增字段：Response.is_visible_to_patient 控制患者可见性
- 分离结果页面：患者端简化版 vs 医生端完整版

Step 3.4: 患者ID验证与信息获取
- 实现患者ID存在性检查：检查数据库中是否已有该患者记录
- 如果患者ID存在：
  - 直接获取患者基础信息进行展示确认
  - 跳过重复信息填写，直接进入任务中心
  - 允许患者更新个人信息（姓名、年龄、体重、身高）
- 如果患者ID不存在：
  - 引导患者填写基础信息（姓名、年龄、体重、身高）
  - 创建新的患者记录

Step 3.5: 本地数据存储优化
- 扩展 app/shared/utils/database.ts
- 实现基于患者ID的数据隔离
- 添加权限检查函数：checkPatientAccess, checkDoctorAccess
- 实现数据缓存机制，提高查询性能

==================================================
第四阶段：患者端任务Dashboard与问卷流程重构
==================================================

目标：创建任务导向的患者界面，优化问卷填写体验

Step 4.1: 患者任务Dashboard设计
- 重构 app/patient/dashboard/page.tsx（替换原有的info页面）
- 卡片式布局设计，每个问卷类型一个任务卡片：
  - HAEMO-QoL-A 生存质量量表
  - HAL 血友病活动列表
  - 未来扩展的其他问卷
- 每个任务卡片显示：
  - 问卷名称和简短描述
  - 完成状态：未开始/进行中/已完成
  - 进度条显示填写百分比
  - 预计完成时间
  - "开始填写"或"继续填写"按钮

Step 4.2: 任务状态管理
- 实现任务进度跟踪：每个问卷的填写进度百分比
- 状态类型：not_started, in_progress, completed, expired
- 自动保存功能：用户填写过程中定期保存进度
- 断点续写：用户可以随时暂停，下次继续填写

Step 4.3: 患者信息确认流程
- 在任务Dashboard前添加信息确认页面
- 显示从数据库获取的患者基础信息
- 允许患者更新：姓名、年龄、体重、身高
- 医疗信息只读显示（由医生填写的部分）
- 确认后进入任务Dashboard

Step 4.4: 问卷入口重构
- 从任务卡片点击进入对应问卷
- 问卷开始前显示：
  - 问卷说明和预计时间
  - 上次填写进度（如果有）
  - "从头开始"或"继续填写"选项
- 问卷完成后返回任务Dashboard，更新完成状态

Step 4.5: 患者端结果页面简化
- 重构 app/patient/result/page.tsx
- 只显示：
  - 问卷完成确认信息
  - 感谢语和后续建议
  - 返回任务中心按钮
  - 不显示具体分数和详细分析
- 为医生端预留完整结果查看功能

==================================================
第五阶段：医生端患者管理与问卷分配系统
==================================================

目标：实现医生端的完整患者管理功能和问卷分配系统

Step 5.1: 患者管理主页面
- 创建 app/doctor/patients/page.tsx
- 患者列表显示：患者ID、姓名、年龄、最后活动时间、当前任务状态
- 搜索和筛选功能：按姓名、ID、状态筛选
- 批量操作：批量分配问卷、导出数据
- "添加新患者"功能

Step 5.2: 患者详情页面
- 创建 app/doctor/patients/[id]/page.tsx
- 标签页设计：
  - 基本信息：显示和编辑患者所有信息（包括医疗信息）
  - 问卷历史：查看所有已完成问卷的详细结果和分析
  - 任务管理：当前分配的任务状态，新增任务分配
  - 治疗记录：医疗信息的历史变更记录

Step 5.3: 医疗信息管理
- 医生专属填写区域：
  - 每周治疗次数、治疗剂量
  - 评估日期、下次随访日期
  - 诊断信息、治疗方案
- 历史记录追踪：记录所有医疗信息的变更历史
- 权限验证：确保只有医生可以修改医疗信息

Step 5.4: 问卷分配功能
- 在患者详情页添加"分配新问卷"功能
- 问卷选择：HAEMO-QoL-A、HAL等
- 设置参数：
  - 截止时间
  - 优先级（普通/紧急）
  - 备注说明
- 分配后自动在患者端显示新任务

Step 5.5: 医生端完整结果查看
- 创建专门的结果分析页面
- 显示完整评分结果：
  - 各维度得分详情
  - 历史趋势对比图
  - 异常值标注和建议
- 数据导出功能：PDF报告、Excel数据
- 结果对比：多次评估结果的横向对比

==================================================
第六阶段：数据分析、可视化与系统完善
==================================================

目标：实现结果分析、数据可视化，完善系统功能和用户体验

Step 6.1: 医生端数据分析Dashboard
- 创建 app/doctor/analytics/page.tsx
- 概览统计：
  - 总患者数、活跃患者数
  - 本周/月完成问卷数量
  - 平均完成时间统计
- 趋势分析：
  - 患者整体得分趋势
  - 不同维度的分布情况
  - 异常患者识别和提醒

Step 6.2: 可视化图表系统
- 创建 app/shared/components/charts/ 目录
- 开发专业医疗图表组件：
  - 患者得分趋势折线图
  - 多维度雷达图对比
  - 患者群体分布柱状图
  - 治疗效果相关性分析图
- 响应式图表设计，支持移动端查看

Step 6.3: 智能提醒系统
- 实现多层级提醒功能：
  - 患者端：任务截止提醒、填写进度提醒
  - 医生端：新完成问卷通知、异常结果警报、随访日期提醒
- 提醒方式：系统内通知、邮件提醒（可选）
- 智能推荐：基于历史数据推荐最佳问卷分配时机

Step 6.4: 数据导出与报告生成
- 患者个体报告：
  - 问卷结果综合分析报告
  - 治疗建议和生活质量改善建议
  - PDF格式，支持打印和分享
- 批量数据导出：
  - Excel格式的患者数据批量导出
  - 数据脱敏选项，保护患者隐私
  - 自定义导出字段和时间范围

Step 6.5: 系统优化与安全加固
- 性能优化：
  - 实现数据分页和虚拟滚动
  - 图片和组件懒加载
  - 接口缓存策略优化
- 安全加固：
  - 患者数据加密存储
  - 访问日志记录
  - 定期数据备份机制
- 用户体验优化：
  - 离线功能支持（问卷数据本地暂存）
  - 多语言支持预留接口
  - 无障碍访问优化

==================================================
关键改进点总结
==================================================

数据权限分离：
✅ 患者端：只能填写和查看基础个人信息（姓名、年龄、体重、身高）
✅ 医生端：管理所有信息，包括医疗治疗相关数据
✅ 问卷结果：患者端隐藏分数，医生端显示完整分析

患者体验优化：
✅ 智能信息识别：检测患者ID，避免重复填写
✅ 任务导向Dashboard：卡片式问卷任务管理
✅ 进度可视化：显示填写进度和完成状态
✅ 断点续写：支持暂停和继续填写

医生工作流程：
✅ 完整的患者生命周期管理
✅ 灵活的问卷分配和监控
✅ 专业的数据分析和可视化
✅ 高效的批量操作和导出功能

技术架构优化：
✅ 清晰的权限控制体系
✅ 高效的数据缓存机制
✅ 用户友好的错误处理
✅ 可扩展的组件架构

==================================================
开发注意事项
==================================================

技术规范：
- 所有代码和注释使用英文
- 终端命令逐条执行，避免使用 "&&" 连接
- 不主动创建bat脚本文件，除非用户明确要求
- 保持现有的TypeScript + Next.js + Tailwind CSS 技术栈
- 复用现有组件和样式，保持界面一致性

数据安全与隐私：
- 严格的权限控制，确保患者只能访问自己的数据
- 医疗信息加密存储，符合医疗数据保护标准
- 问卷结果的可见性控制，保护患者隐私
- 访问日志记录，便于审计和安全监控

用户体验重点：
- 患者端：简化流程，减少认知负荷，友好的UI设计
- 医生端：高效的工作流程，完整的数据展示，专业的分析工具
- 响应式设计：确保在各种设备上都有良好的使用体验
- 错误处理：用户友好的错误提示和恢复机制

==================================================
交付成果
==================================================

每阶段预期交付：
1. 可运行的代码和功能演示
2. 相关页面的UI截图
3. 数据库结构和API文档
4. 用户操作流程说明
5. 下阶段开发计划确认

最终交付：
- 完整的双端医疗管理系统
- 部署就绪的生产代码
- 完整的用户操作手册
- 数据库初始化脚本
- 系统配置和部署文档 